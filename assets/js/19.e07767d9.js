(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{182:function(e,t,o){e.exports=o.p+"assets/img/5ce2be0eef6296298a3a80cb414b085d.5ce2be0e.png"},183:function(e,t,o){e.exports=o.p+"assets/img/957df3044c98b47554d9536dd7631b1b.957df304.png"},248:function(e,t,o){"use strict";o.r(t);var n=[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"content"},[n("p",[n("strong",[e._v("Objectives:")])]),n("p",[n("strong",[e._v("Discuss:")])]),n("blockquote",[n("p",[e._v("Forms and method of post.")])]),n("blockquote",[n("p",[e._v("Input controls. Label, TextBoxes, submit buttons.")])]),n("blockquote",[n("p",[e._v("Bootstrap column formatting.")])]),n("blockquote",[n("p",[e._v("IsPost (review Internet Trip)")])]),n("blockquote",[n("p",[e._v("@ symbol (escape from html to C#)")])]),n("blockquote",[n("p",[e._v("Request object.")])]),n("p",[n("strong",[e._v("Code:")])]),n("blockquote",[n("p",[e._v("Creating a content page with a form using label, textboxes and submit"),n("br"),e._v("\nbuttons.")])]),n("p",[e._v("Demonstrate form processing using C#.")]),n("p",[n("strong",[e._v("Resources: Student")])]),n("p",[e._v("Moodle site.")]),n("p",[e._v("URL Student Notes")]),n("p",[e._v("Url Introduction to ASP.Net Web Programming Using the Razor Syntax (C#)")]),n("p",[e._v("Url Bootstrap")]),n("p",[e._v("Url A Beginner’s Guide to HTML & CSS")]),n("p",[e._v("Url HTML Form Fields")]),n("p",[n("strong",[e._v("Resources: Instructor")])]),n("p",[e._v("Lesson 3: Forms, Input Controls, Form Processing")]),n("p",[n("strong",[e._v("Concepts:")])]),n("ol",[n("li",[n("p",[e._v("Forms and Data collection")])]),n("li",[n("p",[e._v("Types of input controls")])]),n("li",[n("p",[e._v("Request objects, form input controls/submit buttons")])]),n("li",[n("p",[e._v("Processing on a Razor web page")])]),n("li",[n("p",[e._v("Retaining data within an input control")])]),n("li",[n("p",[e._v("Formatting using bootstrap for column layouts")])])]),n("p",[n("strong",[e._v("Bootstrap: Columns")])]),n("ul",[n("li",[n("p",[e._v("class=”row” The "),n("strong",[e._v("bootstrap")]),e._v(" grid is composed of 12 columns that can be"),n("br"),e._v("\nadjusted in any combination within a "),n("strong",[e._v("row")]),e._v(" as long as they add up to 12."),n("br"),e._v("\nYou can think of them as containment "),n("strong",[e._v("rows")]),e._v(" such as the likes of"),n("br"),e._v("\ntable "),n("strong",[e._v("rows")]),e._v(", which are meant to separate different "),n("strong",[e._v("rows")]),e._v(" of content")])]),n("li",[n("p",[e._v("class=”col-xx-nn” columns allocation can be by size (expected device) and"),n("br"),e._v("\nnumber (1-12 in a row)")]),n("ul",[n("li",[n("p",[e._v("xx")]),n("ul",[n("li",[n("p",[e._v("lg (large) monitors")])]),n("li",[n("p",[e._v("md (medium) laptops/small monitors")])]),n("li",[n("p",[e._v("sm (small) tablets/laptops")])]),n("li",[n("p",[e._v("xs (extra small) mobile devices")])])])]),n("li",[n("p",[e._v("nn number of required columns 1-12")])])])]),n("li",[n("p",[e._v("Class=” offset-xx-nn” will move columns nn to the right.")])])]),n("p",[n("strong",[e._v("Bootstrap: form-group")])]),n("p",[e._v("The .form-group class is the easiest way to add some structure to forms. Its"),n("br"),e._v("\nonly purpose is to provide margin-bottom around a label and control pairing. As"),n("br"),e._v("\na bonus, since it’s a class you can use it with <fieldset>s, <div>s, or"),n("br"),e._v("\nnearly any other element. Aids in software that can associate a label and"),n("br"),e._v("\ncontrol for disabled users (sight impaired).")]),n("p",[e._v("<form>")]),n("p",[e._v('<div class="form-group">')]),n("p",[e._v('<label for="formGroupExampleInput">Example label</label>')]),n("p",[e._v('<input type="text" class="form-control" id="formGroupExampleInput"'),n("br"),e._v('\nplaceholder="Example input">')]),n("p",[e._v("</div>")]),n("p",[e._v('<div class="form-group">')]),n("p",[e._v('<label for="formGroupExampleInput2">Another label</label>')]),n("p",[e._v('<input type="text" class="form-control" id="formGroupExampleInput2"'),n("br"),e._v('\nplaceholder="Another input">')]),n("p",[e._v("</div>")]),n("p",[e._v("</form>")]),n("p",[n("strong",[e._v("Form")])]),n("p",[n("strong",[e._v("The content page is processed from the start of the physical file to the end"),n("br"),e._v("\nof the file.")])]),n("p",[n("img",{attrs:{src:o(182),alt:""}})]),n("p",[e._v("@{")]),n("p",[e._v('Page.Title = "TextBoxes";')]),n("p",[e._v('Layout = "~/_LayoutMenu.cshtml";')]),n("p",[e._v('var controlnamevariable = Request.Form["controlname"];')]),n("p",[e._v("}")]),n("p",[e._v("@section banner{")]),n("p",[e._v('<span style="font-size:xx-large"><strong>TextBoxes</strong></span>}')]),n("p",[e._v("<div>")]),n("p",[e._v("@if (IsPost)")]),n("p",[e._v("{")]),n("p",[e._v("<p>You entered &gt; @controlnamevariable &lt;</p>")]),n("p",[e._v("}")]),n("p",[e._v('<form id="theform" action="" method="post">')]),n("p",[e._v('<label for="forcontrolname">FieldLabel:</label>')]),n("p",[e._v('<input type="text" name="controlname" id="controlnameid"'),n("br"),e._v('\nvalue="@controlnamevariable" placeholder="enter some data" />')]),n("p",[e._v('<button type="submit" name="formbutton" id="formbuttonid" class="btn'),n("br"),e._v('\nbtn-primary"')]),n("p",[e._v('value="submit">Press Me</button>')]),n("p",[e._v("</form>")]),n("p",[e._v("</div>")]),n("p",[n("strong",[e._v("Request.Form[“controlname”]")])]),n("p",[e._v("To obtain input data from form controls use Request.Form[“controlname”] where"),n("br"),e._v("\nthe controlname is the name= parameter on an input control. Data will be"),n("br"),e._v("\nsupplied as a string.")]),n("p",[e._v("On the first access of the context page, you need to remember that this form has"),n("br"),e._v("\nyet to be sent to the user (internet trip). That means the form does NOT exists"),n("br"),e._v("\nyet. Therefore “controlname” does NOT exist yet, however, the command will NOT"),n("br"),e._v("\nabort. Instead, if a control does not exist, the value from Request.Form[] is"),n("br"),e._v("\nnull. Once the form is sent to the user and submitted back (postback), then the"),n("br"),e._v("\ncontrol will exist. Remember, this is C# so these string (“controlname”) are"),n("br"),e._v("\ncase-sensitive and spelling is important.")]),n("p",[n("strong",[e._v("<form id=”formname” action=”” method=”post”>")])]),n("ul",[n("li",[n("p",[e._v("Indicates the form. You can have multiple forms on a page but we will limit"),n("br"),e._v("\nit to one.")])]),n("li",[n("p",[e._v("The action attribute specifies where to send the form-data when a form is"),n("br"),e._v("\nsubmitted. Action can be blank (stay on this window)")])]),n("li",[n("p",[e._v("The method attribute specifies how to send form-data (the form-data is sent"),n("br"),e._v("\nto the page specified in the action attribute). The form-data can be sent as"),n("br"),e._v('\nURL variables (with method="get") or as HTTP post transaction (with'),n("br"),e._v('\nmethod="post").')]),n("ul",[n("li",[n("p",[e._v("Notes on GET")]),n("ul",[n("li",[n("p",[e._v("Appends form-data into the URL in name/value pairs")])]),n("li",[n("p",[e._v("The length of a URL is limited (about 3000 characters)")])]),n("li",[n("p",[e._v("Never use GET to send sensitive data! (will be visible in the URL)")])]),n("li",[n("p",[e._v("Useful for form submissions where a user want to bookmark the result")])]),n("li",[n("p",[e._v("GET is better for non-secure data, like query strings in Google")])])])]),n("li",[n("p",[e._v("Notes on POST")]),n("ul",[n("li",[n("p",[e._v("Appends form-data inside the body of the HTTP request (data is not"),n("br"),e._v("\nshown is in URL)")])]),n("li",[n("p",[e._v("Has no size limitations")])]),n("li",[n("p",[e._v("Form submissions with POST cannot be bookmarked")])])])])])])]),n("p",[e._v("Controls")]),n("ul",[n("li",[n("p",[e._v("<Label> used to place text next to an input control to act as a prompt for"),n("br"),e._v("\nthe user")])]),n("li",[n("p",[e._v("<input> used to obtain data from the user")]),n("ul",[n("li",[n("p",[e._v("Type= type of input expected, can many formats, Text is most general,"),n("br"),e._v("\nTextBox")])]),n("li",[n("p",[e._v("Name= value used to identify control for Request.Form[]")])]),n("li",[n("p",[e._v("Id value used by javascript to identify an element")])]),n("li",[n("p",[e._v("Value= used to supply text to be displayed in control")])]),n("li",[n("p",[e._v("Placeholder= text that acts as a prompt for the control. Is NOT data.")])])])]),n("li",[n("p",[e._v("<button> used to cause a post back to web server of the web page"),n("br"),e._v("\ntype=”submit”")]),n("ul",[n("li",[n("p",[e._v("Name= value used to identify control for Request.Form[]")])]),n("li",[n("p",[e._v("Id value used by javascript to identify an element")])]),n("li",[n("p",[e._v("Value= used to supply a value for Request.Form[]")])])])])]),n("p",[n("strong",[e._v("Processing:")])]),n("ul",[n("li",[n("p",[e._v("@if(IsPost)")]),n("ul",[n("li",[n("p",[e._v("the @ escapes to C#")])]),n("li",[n("p",[e._v("IsPost flag is false on first page access, true on posting access")])]),n("li",[n("p",[e._v("<p> paragraph to be added to web page only if page is a post back")])]),n("li",[n("p",[e._v("@controlnamevariable excapes paragraph to C# and access C# variable")])])])])]),n("p",[e._v("Demo Exercise:")]),n("p",[e._v("Create a 2 column form; which with a label, textbox, submit button. Processing,"),n("br"),e._v("\ndetermine under IsPost, which button was press and display the data of the"),n("br"),e._v("\nappropriate column.")]),n("ul",[n("li",[n("p",[e._v("Copy and paste label,input and button lines")])]),n("li",[n("p",[e._v("Rename all controls indicating column,")])]),n("li",[n("p",[e._v("****<button> name= attributes use the "),n("strong",[e._v("same")]),e._v(" name but a"),n("br"),n("strong",[e._v("different")]),e._v(" value*****")])]),n("li",[n("p",[e._v("Add <div class=”col-sm-6> to each set of controls")])]),n("li",[n("p",[e._v("Alter present Request.Form to reference left column input control")])]),n("li",[n("p",[e._v("Add Request.Form to reference right column input control")])]),n("li",[n("p",[e._v("Add Request.Form to reference the submit button name.")])])]),n("p",[n("img",{attrs:{src:o(183),alt:""}})]),n("p",[e._v("Code:")]),n("p",[e._v("@{")]),n("p",[e._v('Page.Title = "TextBoxes";')]),n("p",[e._v('Layout = "~/_LayoutMenu.cshtml";')]),n("p",[e._v('var controlnamevariableleft = Request.Form["controlnameleft"];')]),n("p",[e._v('var controlnamevariableright = Request.Form["controlnameright"];')]),n("p",[e._v('var buttonpressed = Request.Form["formbutton"];')]),n("p",[e._v("}")]),n("p",[e._v("@section banner{")]),n("p",[e._v('<span style="font-size:xx-large"><strong>TextBoxes</strong></span>}')]),n("p",[e._v("<div>")]),n("p",[e._v("@if (IsPost)")]),n("p",[e._v("{")]),n("p",[e._v('if (buttonpressed.Equals("left"))')]),n("p",[e._v("{")]),n("p",[e._v("<p>You entered &gt; @controlnamevariableleft &lt;</p>")]),n("p",[e._v("}")]),n("p",[e._v("else")]),n("p",[e._v("{")]),n("p",[e._v("<p>You entered &gt; @controlnamevariableright &lt;</p>")]),n("p",[e._v("}")]),n("p",[e._v("}")]),n("p",[e._v('<form id="theform" action="" method="post">')]),n("p",[e._v('<div class="row">')]),n("p",[e._v('<div class="col-sm-6">')]),n("p",[e._v('<label for="forcontrolnameleft">Left:</label>')]),n("p",[e._v('<input type="text" name="controlnameleft" id="controlnameleftid"'),n("br"),e._v('\nvalue="@controlnamevariableleft" placeholder="enter some data" />')]),n("p",[e._v('<button type="submit" name="formbutton" id="formbuttonid" class="btn"')]),n("p",[e._v('value="left">')]),n("p",[e._v("Press Left")]),n("p",[e._v("</button>")]),n("p",[e._v("</div>")]),n("p",[e._v('<div class="col-sm-6">')]),n("p",[e._v('<label for="forcontrolnameright">Right:</label>')]),n("p",[e._v('<input type="text" name="controlnameright" id="controlnamerightid"'),n("br"),e._v('\nvalue="@controlnamevariableright" placeholder="enter some data" />')]),n("p",[e._v('<button type="submit" name="formbutton" id="formbuttonid" class="btn"')]),n("p",[e._v('value="right">')]),n("p",[e._v("Press Right")]),n("p",[e._v("</button>")]),n("p",[e._v("</div>")]),n("p",[e._v("</div>")]),n("p",[e._v("</form>")]),n("p",[e._v("</div>")]),n("p",[e._v("Testing can be done with either ctrl + F5 (no debug) or F5 (debug). If you are"),n("br"),e._v("\ndoing F5, you can put in breakpoints, watch values, hold your cursor on"),n("br"),e._v("\nvariables to see value, step through code. If you do use F5, then close the"),n("br"),e._v("\nbrowser tab, the program is still running. You will need to stop the program"),n("br"),e._v("\n(use red square on icon menu bar).")])])}],s=o(0),r=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},n,!1,null,null,null);r.options.__file="lesson-3.md";t.default=r.exports}}]);