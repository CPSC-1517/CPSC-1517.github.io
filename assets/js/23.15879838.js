(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{252:function(t,s,n){"use strict";n.r(s);var a=n(0),e=Object(a.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"content"},[n("h1",{attrs:{id:"lesson-plan-day-3"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#lesson-plan-day-3","aria-hidden":"true"}},[t._v("#")]),t._v(" Lesson Plan: Day 3")]),n("p",[t._v("Objectives:")]),n("p",[t._v("Discuss:")]),n("ul",[n("li",[t._v("Review various datatypes/structures: List, array, looping, switch, if/else?")]),n("li",[t._v("Datatypes in memory storage. What is passed during method calls.")]),n("li",[t._v("Review Programming Development Cycle. Create pseudo code logic for Main() driver.")])]),n("p",[t._v("Code:")]),n("ul",[n("li",[t._v("Finish class: Die")]),n("li",[t._v("Give definition of Turn class and have students code it then review")]),n("li",[t._v("Code console driver Main() (declaring various datatypes, Menu/Switch/Loop)")])]),n("p",[t._v("Resources: Student")]),n("ul",[n("li",[t._v("Moodle site.")]),n("li",[t._v("Object Review topic:")]),n("li",[t._v("Url Programming Fundamentals: An Object-First Approach in C#")]),n("li",[t._v("pdf: OOP Basics")]),n("li",[t._v("pdf: The ABCs of Classes and Objects")])]),n("p",[t._v("Resources: Instructor")]),n("ul",[n("li",[t._v("Lesson 2: OOPs Basic Review: Die Main() driver")])]),n("p",[t._v("Concepts:")]),n("ul",[n("li",[t._v("Program Development Cycle")]),n("li",[t._v("Logic Design (planning)")]),n("li",[t._v("Code Implementation")]),n("li",[t._v("General C# syntax review")]),n("li",[t._v("List vs Array")]),n("li",[t._v("For loops, Do While vs Do Until")])]),n("p",[n("img",{attrs:{src:"l-3-a.png",alt:""}}),n("br"),n("img",{attrs:{src:"l-3-b.png",alt:""}}),n("br"),n("img",{attrs:{src:"l-3-c.png",alt:""}}),n("br"),n("img",{attrs:{src:"l-3-d.png",alt:""}})]),n("p",[t._v("Coding:")]),n("ul",[n("li",[t._v("Create a class: Die (complete see lesson Day 2)")]),n("li",[t._v("Create a class: Turn")]),n("li",[t._v("Create Main driver: Menu, Do while loop, Switch with stub case (writeline message)")])]),n("div",{staticClass:"language-csharp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-csharp"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("Turns")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("int")]),t._v(" Player1 "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("get")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("set")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("int")]),t._v(" Player2 "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("get")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("set")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("string")]),t._v(" Winner "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("get")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("set")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{attrs:{class:"token comment"}},[t._v("//no constructor")]),t._v("\n    "),n("span",{attrs:{class:"token comment"}},[t._v("//no behaviours")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("div",{staticClass:"language-csharp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-csharp"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("Main")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token keyword"}},[t._v("string")]),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token comment"}},[t._v("//the object definition for the data objects need")]),t._v("\n    "),n("span",{attrs:{class:"token comment"}},[t._v("//to be placed in this file.")]),t._v("\n    "),n("span",{attrs:{class:"token comment"}},[t._v("//the namespace for my data objects is OOPsData")]),t._v("\n    "),n("span",{attrs:{class:"token comment"}},[t._v("//since this namespace does not match the namespace")]),t._v("\n    "),n("span",{attrs:{class:"token comment"}},[t._v("//for the Main(), you must include the OOPsData")]),t._v("\n    "),n("span",{attrs:{class:"token comment"}},[t._v("//namespace in this file so that Main() knows where ")]),t._v("\n    "),n("span",{attrs:{class:"token comment"}},[t._v("//to find Turn")]),t._v("\n\n    "),n("span",{attrs:{class:"token comment"}},[t._v("//generate an instance of List<T> where T represents")]),t._v("\n    "),n("span",{attrs:{class:"token comment"}},[t._v("//the datatype of the item I am collecting")]),t._v("\n    "),n("span",{attrs:{class:"token comment"}},[t._v("//new causes the contructor of List<T> to executed")]),t._v("\n    "),n("span",{attrs:{class:"token comment"}},[t._v("//this instance's variable will be set to a List")]),t._v("\n    "),n("span",{attrs:{class:"token comment"}},[t._v("//at this time the List instance is empty")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("//.Net Core does not bring in the default using that")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("//.Net Framework brngs in. Therefore you will need to")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("//resolve the references")]),t._v("\n    List"),n("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("Turns"),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" gameTurns "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{attrs:{class:"token generic-method"}},[n("span",{attrs:{class:"token function"}},[t._v("List")]),n("span",{attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{attrs:{class:"token class-name"}},[t._v("Turns")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{attrs:{class:"token comment"}},[t._v("//declare an array of datatype Die which will hold 2")]),t._v("\n    "),n("span",{attrs:{class:"token comment"}},[t._v("//elements")]),t._v("\n    "),n("span",{attrs:{class:"token comment"}},[t._v("//this array is empty")]),t._v("\n    Die"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" dice "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("Die")]),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token number"}},[t._v("2")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token comment"}},[t._v("//load the array elements")]),t._v("\n    dice"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token number"}},[t._v("0")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("Die")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                "),n("span",{attrs:{class:"token comment"}},[t._v("//default constructor")]),t._v("\n    dice"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token number"}},[t._v("1")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("Die")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("6")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("3")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"Green"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),n("span",{attrs:{class:"token comment"}},[t._v("//greedy constructor")]),t._v("\n\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("string")]),t._v(" menuChoice "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('""')]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        Console"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("WriteLine")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"Game Menu: \\n"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        Console"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("WriteLine")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"A) Set Die side count"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        Console"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("WriteLine")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"B) Roll the dice"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        Console"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("WriteLine")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"C) Display all game turn results"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        Console"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("WriteLine")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"X) Exit"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        Console"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Write")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"Enter menu choice: "')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        menuChoice "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Console"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("ReadLine")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("switch")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("menuChoice"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("ToUpper")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"A"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    Console"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("WriteLine")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"Case A"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    "),n("span",{attrs:{class:"token keyword"}},[t._v("break")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),n("span",{attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"B"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    Console"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("WriteLine")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"Case B"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    "),n("span",{attrs:{class:"token keyword"}},[t._v("break")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                        "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),n("span",{attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"C"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    Console"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("WriteLine")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"Case C"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    "),n("span",{attrs:{class:"token keyword"}},[t._v("break")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                        "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),n("span",{attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"X"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    Console"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("WriteLine")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"Thank you for playing. Come again."')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    "),n("span",{attrs:{class:"token keyword"}},[t._v("break")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),n("span",{attrs:{class:"token keyword"}},[t._v("default")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    Console"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("WriteLine")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"Invalid menu choice. Try again."')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    "),n("span",{attrs:{class:"token keyword"}},[t._v("break")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("menuChoice"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("ToUpper")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"X"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    Console"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("ReadKey")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token comment"}},[t._v("//eom")]),t._v("\n")])])])])}],!1,null,null,null);e.options.__file="lesson-3.md";s.default=e.exports}}]);